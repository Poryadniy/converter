# main.py
import os

from globalUnarchiver import NestedArchiveExtractor
from unarchiver import find_all_tickers, extract_and_organize_sequential
from gluer import FuturesConcatenator
from converter import FinamTxtCandleGenerator

def main():
    # –®–∞–≥ 1: –†–∞–∑–∞—Ä—Ö–∏–≤–∞—Ü–∏—è
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ä–∞–∑–∞—Ä—Ö–∏–≤–∞—Ü–∏–∏...")
    extractor = NestedArchiveExtractor()
    input_directory = "D:\\Data\\ChinaData"
    unarchived_directory = "D:\\Data\\Unarchived"  # Output –¥–ª—è —Ä–∞–∑–∞—Ä—Ö–∏–≤–∞—Ü–∏–∏, input –¥–ª—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏

    try:
        extractor.process_directory(input_directory, unarchived_directory)
    except Exception as e:
        print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ —Ä–∞–∑–∞—Ä—Ö–∏–≤–∞—Ü–∏–∏: {e}")
        return

    # –®–∞–≥ 2: –ü–æ–∏—Å–∫ —Ç–∏–∫–µ—Ä–æ–≤ –∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è
    print("\nüöÄ –ó–∞–ø—É—Å–∫ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –ø–æ —Ç–∏–∫–µ—Ä–∞–º...")
    tickers_directory = "D:\\Data\\TickersData"  # Output –¥–ª—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏, input –¥–ª—è —Å–∫–ª–µ–π–∫–∏

    if not os.path.exists(unarchived_directory):
        print("‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å —Ä–∞–∑–∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
        return

    tickers = find_all_tickers(unarchived_directory)

    print("=" * 50)
    print(f"üìä –ù–∞–π–¥–µ–Ω–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ç–∏–∫–µ—Ä–æ–≤: {len(tickers)}")
    print("üìã –°–ø–∏—Å–æ–∫ —Ç–∏–∫–µ—Ä–æ–≤:")
    for i, ticker in enumerate(tickers, 1):
        print(f"{i:3d}. {ticker}")

    if tickers:
        extract_and_organize_sequential(unarchived_directory, tickers_directory, tickers)
    else:
        print("‚ùå –¢–∏–∫–µ—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
        return

    # –®–∞–≥ 3: –°–∫–ª–µ–π–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞–º
    print("\nüöÄ –ó–∞–ø—É—Å–∫ —Å–∫–ª–µ–π–∫–∏ –¥–∞–Ω–Ω—ã—Ö...")
    glued_directory = "D:\\Data\\GluedData"  # Output –¥–ª—è —Å–∫–ª–µ–π–∫–∏, input –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–≤–µ—á–µ–π
    rollover_days = 5
    debug_mode = False

    concatenator = FuturesConcatenator(tickers_directory, rollover_days, debug=debug_mode)
    concatenator.process_all(output_dir=glued_directory)

    # –®–∞–≥ 4: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–≤–µ—á–µ–π –≤ TXT-—Ñ–æ—Ä–º–∞—Ç–µ
    print("\nüöÄ –ó–∞–ø—É—Å–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–≤–µ—á–µ–π...")
    candle_directory = "D:\\Data\\CandleData"  # Output –¥–ª—è —Å–≤–µ—á–µ–π
    timeframes = ['Min1', 'Min5', 'Min15', 'Hour1', 'Hour4', 'Day']  # –ú–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å —Å–ø–∏—Å–æ–∫

    generator = FinamTxtCandleGenerator(glued_directory, candle_directory, timeframes)
    generator.process_all()

    # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø–∞—É–∑–∞
    input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")

if __name__ == "__main__":
    main()